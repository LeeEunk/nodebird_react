{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '은경'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?update=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 너무 이뻐요~'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '재밌어요!'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nconst ADD_POST = 'ADD_POST';\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  id: 2,\n  content: '더미데이터',\n  User: {\n    id: 1,\n    nickname: 'eunk'\n  },\n  Images: [],\n  Comments: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        // dummyPost를 앞에다가 추가해야 신규 게시물이 맨앞에서 보임\n        postAdded: true\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action","_objectSpread"],"sources":["C:/Users/user/Downloads/react-nodebird/front/reducers/post.js"],"sourcesContent":["export const initialState = {\r\n    mainPosts: [{\r\n        id:1,\r\n        User: {\r\n            id: 1,\r\n            nickname: '은경',\r\n        },\r\n        content: '첫 번째 게시글 #해시태그 #익스프레스',\r\n        Images: [{\r\n            src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?update=20180726',\r\n        },{\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\r\n        },{\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\r\n        }],\r\n        Comments: [{\r\n            User: {\r\n                nickname: 'nero',\r\n            },\r\n            content: '우와 너무 이뻐요~',\r\n        },{\r\n            User: {\r\n                nickname: 'hero',\r\n            },\r\n            content: '재밌어요!'\r\n        }]\r\n    }],\r\n    imagePaths: [],\r\n    postAdded: false,\r\n}\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nexport const addPost = {\r\n    type: ADD_POST,\r\n}\r\n\r\nconst dummyPost = {\r\n    id:2,\r\n    content: '더미데이터',\r\n    User: {\r\n        id:1,\r\n        nickname: 'eunk',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                mainPosts: [dummyPost, ...state.mainPosts],// dummyPost를 앞에다가 추가해야 신규 게시물이 맨앞에서 보임\r\n                postAdded : true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"],"mappings":";;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;EACxBC,SAAS,EAAE,CAAC;IACRC,EAAE,EAAC,CAAC;IACJC,IAAI,EAAE;MACFD,EAAE,EAAE,CAAC;MACLE,QAAQ,EAAE;IACd,CAAC;IACDC,OAAO,EAAE,uBAAuB;IAChCC,MAAM,EAAE,CAAC;MACLC,GAAG,EAAE;IACT,CAAC,EAAC;MACEA,GAAG,EAAE;IACT,CAAC,EAAC;MACEA,GAAG,EAAE;IACT,CAAC,CAAC;IACFC,QAAQ,EAAE,CAAC;MACPL,IAAI,EAAE;QACFC,QAAQ,EAAE;MACd,CAAC;MACDC,OAAO,EAAE;IACb,CAAC,EAAC;MACEF,IAAI,EAAE;QACFC,QAAQ,EAAE;MACd,CAAC;MACDC,OAAO,EAAE;IACb,CAAC;EACL,CAAC,CAAC;EACFI,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,QAAQ,GAAG,UAAU;AAC3B,OAAO,MAAMC,OAAO,GAAG;EACnBC,IAAI,EAAEF;AACV,CAAC;AAED,MAAMG,SAAS,GAAG;EACdZ,EAAE,EAAC,CAAC;EACJG,OAAO,EAAE,OAAO;EAChBF,IAAI,EAAE;IACFD,EAAE,EAAC,CAAC;IACJE,QAAQ,EAAE;EACd,CAAC;EACDE,MAAM,EAAE,EAAE;EACVE,QAAQ,EAAE;AACd,CAAC;AAED,MAAMO,OAAO,GAAGA,CAACC,KAAK,GAAGhB,YAAY,EAAEiB,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACJ,IAAI;IACf,KAAKF,QAAQ;MACT,OAAAO,aAAA,CAAAA,aAAA,KACOF,KAAK;QACRf,SAAS,EAAE,CAACa,SAAS,EAAE,GAAGE,KAAK,CAACf,SAAS,CAAC;QAAC;QAC3CS,SAAS,EAAG;MAAI;IAExB;MACI,OAAOM,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}