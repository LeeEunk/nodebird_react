{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\CommentForm.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from './hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { Button, Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    addCommentDone = _useSelector.addCommentDone,\n    addCommentLoading = _useSelector.addCommentLoading;\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    commentText = _useInput2[0],\n    onChangeCommentText = _useInput2[1],\n    setCommentText = _useInput2[2];\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n_s(CommentForm, \"TkQ1pkz5HHxeoLHkjeNQHPXXfhA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useCallback","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","Button","Form","PropTypes","jsxDEV","_jsxDEV","CommentForm","_ref","_s","post","dispatch","id","state","_state$user$me","user","me","_useSelector","addCommentDone","addCommentLoading","_useInput","_useInput2","_slicedToArray","commentText","onChangeCommentText","setCommentText","useEffect","onSubmitComment","console","log","type","data","content","postId","userId","onFinish","children","Item","style","position","margin","Input","TextArea","value","onChange","rows","fileName","_jsxFileName","lineNumber","columnNumber","_this","right","bottom","zIndex","htmlType","loading","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/CommentForm.js"],"sourcesContent":["import React, { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useInput from './hooks/useInput';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\nimport { Button, Form } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if(addCommentDone) {\r\n            setCommentText('');\r\n        }\r\n    }, [addCommentDone])\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: {content: commentText, postId: post.id, userId: id},\r\n        })\r\n    }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n        <Form.Item style={{ position: 'relative', margin: 0}}>\r\n            <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n            <Button \r\n            style={{ position: 'absolute', right:0, bottom: -40, zIndex: 1 }} \r\n            type='primary' htmlType='submit' loading={addCommentLoading}>\r\n                삐약\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n  )\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AACnC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAiB;EAAAC,EAAA;EAAA,IAAXC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EACvB,IAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,IAAMc,EAAE,GAAGb,WAAW,CAAC,UAACc,KAAK;IAAA,IAAAC,cAAA;IAAA,QAAAA,cAAA,GAAKD,KAAK,CAACE,IAAI,CAACC,EAAE,cAAAF,cAAA,uBAAbA,cAAA,CAAeF,EAAE;EAAA,EAAC;EACpD,IAAAK,YAAA,GAA8ClB,WAAW,CAAC,UAACc,KAAK;MAAA,OAAKA,KAAK,CAACH,IAAI;IAAA,EAAC;IAAxEQ,cAAc,GAAAD,YAAA,CAAdC,cAAc;IAAEC,iBAAiB,GAAAF,YAAA,CAAjBE,iBAAiB;EACzC,IAAAC,SAAA,GAA2DpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhEG,WAAW,GAAAF,UAAA;IAAEG,mBAAmB,GAAAH,UAAA;IAAEI,cAAc,GAAAJ,UAAA;EAEvDK,SAAS,CAAC,YAAM;IACZ,IAAGR,cAAc,EAAE;MACfO,cAAc,CAAC,EAAE,CAAC;IACtB;EACJ,CAAC,EAAE,CAACP,cAAc,CAAC,CAAC;EAEpB,IAAMS,eAAe,GAAG9B,WAAW,CAAC,YAAM;IACtC+B,OAAO,CAACC,GAAG,CAACnB,IAAI,CAACE,EAAE,EAAEW,WAAW,CAAC;IACjCZ,QAAQ,CAAC;MACLmB,IAAI,EAAE7B,mBAAmB;MACzB8B,IAAI,EAAE;QAACC,OAAO,EAAET,WAAW;QAAEU,MAAM,EAAEvB,IAAI,CAACE,EAAE;QAAEsB,MAAM,EAAEtB;MAAE;IAC5D,CAAC,CAAC;EACN,CAAC,EAAE,CAACW,WAAW,EAAEX,EAAE,CAAC,CAAC;EAEvB,oBACEN,OAAA,CAACH,IAAI;IAACgC,QAAQ,EAAER,eAAgB;IAAAS,QAAA,eAC5B9B,OAAA,CAACH,IAAI,CAACkC,IAAI;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAC,CAAE;MAAAJ,QAAA,gBACjD9B,OAAA,CAACmC,KAAK,CAACC,QAAQ;QAACC,KAAK,EAAEpB,WAAY;QAACqB,QAAQ,EAAEpB,mBAAoB;QAACqB,IAAI,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC,eAC9E5C,OAAA,CAACJ,MAAM;QACPoC,KAAK,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEY,KAAK,EAAC,CAAC;UAAEC,MAAM,EAAE,CAAC,EAAE;UAAEC,MAAM,EAAE;QAAE,CAAE;QACjEvB,IAAI,EAAC,SAAS;QAACwB,QAAQ,EAAC,QAAQ;QAACC,OAAO,EAAEpC,iBAAkB;QAAAiB,QAAA;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAEpD,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACF;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACV,CAAC;AAEX,CAAC;AAACzC,EAAA,CAhCIF,WAAW;EAAA,QACIT,WAAW,EACjBC,WAAW,EACwBA,WAAW,EACEC,QAAQ;AAAA;AAAAwD,EAAA,GAJjEjD,WAAW;AAkCjBA,WAAW,CAACkD,SAAS,GAAG;EACpB/C,IAAI,EAAEN,SAAS,CAACsD,MAAM,CAACC;AAC3B,CAAC;AAED,eAAepD,WAAW;AAAA,IAAAiD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}