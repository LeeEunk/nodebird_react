{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\pages\\\\_app.js\",\n  _this = this;\n// page들에 공통처리\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport wrapper from '../store/configureStore';\n\n// App 은 index.js의 부모\n// pages들의 공통 부분 설정\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar App = function App(_ref) {\n  var Component = _ref.Component;\n  //index.js 의 return 부분이 여기의 component 를 의미함\n\n  return (\n    /*#__PURE__*/\n    // redux 사용 시, 페이지를 provider로 감싸줘야함, 단, next는 안써도 됨\n    // <Provider store={store}>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          charSet: \"utf-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"NodeBird\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true)\n    // </Provider>\n  );\n};\n_c = App;\nApp.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\nexport default _c2 = wrapper.withRedux(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Head","PropTypes","wrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_ref","Component","children","charSet","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","propTypes","elementType","isRequired","_c2","withRedux","$RefreshReg$"],"sources":["C:/Users/user/Downloads/react-nodebird/front/pages/_app.js"],"sourcesContent":["// page들에 공통처리\r\nimport React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport wrapper from '../store/configureStore';\r\n\r\n\r\n// App 은 index.js의 부모\r\n// pages들의 공통 부분 설정\r\nconst App = ( {Component} ) => { //index.js 의 return 부분이 여기의 component 를 의미함\r\n\r\n    return(\r\n        // redux 사용 시, 페이지를 provider로 감싸줘야함, 단, next는 안써도 됨\r\n        // <Provider store={store}>\r\n        <>\r\n            <Head>\r\n                <meta charSet='utf-8'/>\r\n                <title>NodeBird</title>\r\n            </Head>\r\n            <Component/>\r\n        </>\r\n        // </Provider>\r\n    )\r\n};\r\n\r\nApp.propTypes = {\r\n    Component: PropTypes.elementType.isRequired,\r\n}\r\n\r\nexport default wrapper.withRedux(App);"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,OAAO,MAAM,yBAAyB;;AAG7C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAAC,IAAA,EAAsB;EAAA,IAAhBC,SAAS,GAAAD,IAAA,CAATC,SAAS;EAAS;;EAE7B;IAAA;IACI;IACA;IACAL,OAAA,CAAAE,SAAA;MAAAI,QAAA,gBACIN,OAAA,CAACJ,IAAI;QAAAU,QAAA,gBACDN,OAAA;UAAMO,OAAO,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAC,CAAC,eACvBZ,OAAA;UAAAM,QAAA;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAsB,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACrB,CAAC,eACPZ,OAAA,CAACK,SAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAC,CAAC;IAAA,eACd;IACF;EAAA;AAER,CAAC;AAACC,EAAA,GAdIV,GAAG;AAgBTA,GAAG,CAACW,SAAS,GAAG;EACZT,SAAS,EAAER,SAAS,CAACkB,WAAW,CAACC;AACrC,CAAC;AAED,eAAAC,GAAA,GAAenB,OAAO,CAACoB,SAAS,CAACf,GAAG,CAAC;AAAC,IAAAU,EAAA,EAAAI,GAAA;AAAAE,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}