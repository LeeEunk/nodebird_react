{"ast":null,"code":"//configureStore.js\nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// import thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\n// 미들웨어는 항상 3단 고차함수임, action이 dispatch되어 로깅되는 함수\n// thunk는 항상 action이 함수인 경우 action은 원래 객체인데 thunk에서 함수임 => 지연함수이기에 나중에 실행해줄 수 있음\n// redux devtools를 대체할 수 있음 -> console로 찍음\n// {type: 'LOG_IN', data: {…}}\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n    getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      // if(typeof action === 'function') {\n      //     return action(dispatch, getState, extraArgument);\n      // }\n      return next(action);\n    };\n  };\n};\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  // redux middleware 붙이기\n  // 배포용\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  // 개발용\n  // const enhancer = process.env.NODE_ENV === 'production'\n  //     ? compose(applyMiddleware([]))\n  //     : composeWithDevTools(applyMiddleware([]))\n\n  // state와 reducer 포함하는 것을 store라고 함\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  // 개발할때 debug를 true로 하면 더 자세하게 내용을 보여주니깐 변경하면 좋음\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","_ref","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","apply","store","sagaTask","run","wrapper","debug"],"sources":["C:/Users/user/Desktop/nodebird_react/front/store/configureStore.js"],"sourcesContent":["//configureStore.js\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// import thunkMiddleware from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\n// 미들웨어는 항상 3단 고차함수임, action이 dispatch되어 로깅되는 함수\r\n// thunk는 항상 action이 함수인 경우 action은 원래 객체인데 thunk에서 함수임 => 지연함수이기에 나중에 실행해줄 수 있음\r\n// redux devtools를 대체할 수 있음 -> console로 찍음\r\n// {type: 'LOG_IN', data: {…}}\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n    console.log(action);\r\n    // if(typeof action === 'function') {\r\n    //     return action(dispatch, getState, extraArgument);\r\n    // }\r\n    return next(action);\r\n}\r\n\r\n\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware, loggerMiddleware];\r\n    // redux middleware 붙이기\r\n    // 배포용\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares));\r\n    // 개발용\r\n    // const enhancer = process.env.NODE_ENV === 'production'\r\n    //     ? compose(applyMiddleware([]))\r\n    //     : composeWithDevTools(applyMiddleware([]))\r\n\r\n    // state와 reducer 포함하는 것을 store라고 함\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    // 개발할때 debug를 true로 하면 더 자세하게 내용을 보여주니깐 변경하면 좋음\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;;AAE9D;AACA,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;;AAE/B;AACA;AACA;AACA;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA;EAAA,IAAMC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAAA,OAAO,UAACC,IAAI;IAAA,OAAK,UAACC,MAAM,EAAK;MACvEC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB;MACA;MACA;MACA,OAAOD,IAAI,CAACC,MAAM,CAAC;IACvB,CAAC;EAAA;AAAA;AAGD,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EACzB,IAAMC,cAAc,GAAGZ,oBAAoB,CAAC,CAAC;EAC7C,IAAMa,WAAW,GAAG,CAACD,cAAc,EAAET,gBAAgB,CAAC;EACtD;EACA;EACA,IAAMW,QAAQ,GAAG,QACXjB,OAAO,CAACD,eAAe,CAAAmB,KAAA,SAAIF,WAAW,CAAC,CAAC,GACxCd,mBAAmB,CAACH,eAAe,CAAAmB,KAAA,SAAIF,WAAW,CAAC,CAAC;EAC1D;EACA;EACA;EACA;;EAEA;EACA,IAAMG,KAAK,GAAGlB,WAAW,CAACG,OAAO,EAAEa,QAAQ,CAAC;EAC5CE,KAAK,CAACC,QAAQ,GAAGL,cAAc,CAACM,GAAG,CAAChB,QAAQ,CAAC;EAC7C,OAAOc,KAAK;AAChB,CAAC;AAED,IAAMG,OAAO,GAAGxB,aAAa,CAACgB,cAAc,EAAE;EAC1C;EACAS,KAAK;AACT,CAAC,CAAC;AAEF,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}