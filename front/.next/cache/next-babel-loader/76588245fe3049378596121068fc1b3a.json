{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\PostCard.js\";\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Avatar, Button, Card, Popover, List } from 'antd';\nimport { Comment } from '@ant-design/compatible';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport PostCardContent from './PostCardContent';\nimport CommentForm from './CommentForm';\nimport Link from 'next/link';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me && me.id;\n  const onToggleLike = useCallback(() => {\n    // true -> false, false -> true\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n\n  // const id = useSelector((state) => state.user.me?.id);\n  // optional chaining , me가 있으면 id를 출력 없으면 undefined로 출력\n  // const id = me ?.id; \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 34\n      }, this)\n      // 배열 안에 jsx를 넣어줄 땐 늘 key를 붙여줘야 함\n      ,\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              danger: true,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments ? post.Comments.length : 0} 댓글 `,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments || [],\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Link, {\n              href: {\n                pathname: '/user',\n                query: {\n                  id: item.User.id\n                }\n              },\n              as: `/user/${item.User.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: item.User.nickname[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    UserId: PropTypes.number,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useCallback","useState","PropTypes","useSelector","useDispatch","Avatar","Button","Card","Popover","List","Comment","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","PostImages","PostCardContent","CommentForm","Link","REMOVE_POST_REQUEST","jsxDEV","_jsxDEV","Fragment","_Fragment","PostCard","post","dispatch","liked","setLiked","commentFormOpened","setCommentFormOpened","me","state","user","id","onToggleLike","prev","onToggleComment","onRemovePost","type","data","style","marginBottom","children","cover","Images","images","fileName","_jsxFileName","lineNumber","columnNumber","actions","twoToneColor","onClick","content","Group","User","danger","Meta","avatar","nickname","title","description","postData","header","Comments","length","itemLayout","dataSource","renderItem","item","author","href","pathname","query","as","propTypes","shape","number","object","UserId","string","createdAt","arrayOf","any","isRequired"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/PostCard.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Avatar, Button, Card, Popover, List} from 'antd';\r\nimport { Comment } from '@ant-design/compatible';\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons'\r\nimport PostImages from './PostImages';\r\nimport PostCardContent from './PostCardContent';\r\nimport CommentForm from './CommentForm';\r\nimport Link from 'next/link';\r\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const { me } = useSelector((state) => state.user);\r\n  const id = me && me.id;\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    // true -> false, false -> true\r\n    setLiked((prev) => !prev)\r\n  },[]);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    })\r\n  }, []);\r\n\r\n  // const id = useSelector((state) => state.user.me?.id);\r\n  // optional chaining , me가 있으면 id를 출력 없으면 undefined로 출력\r\n  // const id = me ?.id; \r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        // 배열 안에 jsx를 넣어줄 땐 늘 key를 붙여줘야 함\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked \r\n           ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n           : <HeartOutlined key=\"heart\" onClick={onToggleLike}  />,\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\r\n          <Popover key=\"more\" content={(\r\n            <Button.Group>\r\n              {/* 게시자와 게시물 작성자의 id가 나와 같으면 수정 삭제가 가능*/}\r\n              {id && post.User.id === id ? (\r\n              <>\r\n                <Button>수정</Button>\r\n                <Button danger onClick={onRemovePost}>삭제</Button>\r\n              </>\r\n              ) :  <Button>신고</Button> }\r\n            </Button.Group>\r\n          )}>\r\n            <EllipsisOutlined />\r\n          </Popover>\r\n        ]}\r\n      >\r\n        <Card.Meta \r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content}/>}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n         <CommentForm post={post} />\r\n         <List\r\n            header={`${post.Comments ? post.Comments.length : 0 } 댓글 `}\r\n            itemLayout='horizontal'\r\n            dataSource={post.Comments || [] }\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={(\r\n                    <Link href={{ pathname: '/user', query: {id:item.User.id}}} as={`/user/${item.User.id}`}>\r\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\r\n                    </Link>\r\n                  )}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )} \r\n         >\r\n         </List>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    UserId: PropTypes.number,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.any),\r\n    Images: PropTypes.arrayOf(PropTypes.any),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}