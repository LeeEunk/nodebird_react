{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\PostCard.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Card, Popover } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport ButtonGroup from 'antd/es/button/button-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  // optional chaining , me가 있으면 id를 출력 없으면 undefined로 출력\n  // const id = me ?.id; \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 34\n      }, _this)\n      // 배열 안에 jsx를 넣어줄 땐 늘 key를 붙여줘야 함\n      ,\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [id && post.User.id === id, /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, _this)],\n      children: [/*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, _this);\n};\n_s(PostCard, \"FJdoDJNyUlJ5WKWdRipc5DguCUQ=\", true);\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","Button","Card","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","ButtonGroup","jsxDEV","_jsxDEV","PostCard","_ref","_s","post","id","useSelector","state","_state$user$me","user","me","children","cover","Images","PostImages","images","fileName","_jsxFileName","lineNumber","columnNumber","_this","actions","content","User","type","Image","Content","Buttons","CommentForm","Comments","_c","propTypes","PropTypes","shape","number","object","string","createdAt","arrayOf","isRequired","$RefreshReg$"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/PostCard.js"],"sourcesContent":["import React from 'react'\r\nimport { Button, Card, Popover } from 'antd';\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons'\r\nimport ButtonGroup from 'antd/es/button/button-group';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  // optional chaining , me가 있으면 id를 출력 없으면 undefined로 출력\r\n  // const id = me ?.id; \r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        // 배열 안에 jsx를 넣어줄 땐 늘 key를 붙여줘야 함\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          <HeartOutlined key=\"heart\"/>,\r\n          <MessageOutlined key=\"comment\"/>,\r\n          <Popover key=\"more\" content={(\r\n            <ButtonGroup>\r\n              {/* 게시자와 게시물 작성자의 id가 나와 같으면 */}\r\n              {id && post.User.id === id }\r\n              <Button type='primary'>수정</Button>\r\n              <Button type='danger'>삭제</Button>\r\n              <Button>신고</Button>\r\n            </ButtonGroup>\r\n          )}>\r\n            <EllipsisOutlined />\r\n          </Popover>\r\n        ]}\r\n      >\r\n        <Image />\r\n        <Content />\r\n        <Buttons></Buttons>\r\n      </Card>\r\n      <CommentForm />\r\n      <Comments />\r\n    </div>\r\n  )\r\n}\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,OAAO,QAAQ,MAAM;AAC5C,SAASC,gBAAgB,EAAEC,aAAa,EAAEC,eAAe,EAAEC,eAAe,QAAQ,mBAAmB;AACrG,OAAOC,WAAW,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAiB;EAAAC,EAAA;EAAA,IAAXC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EACtB,IAAMC,EAAE,GAAGC,WAAW,CAAC,UAACC,KAAK;IAAA,IAAAC,cAAA;IAAA,QAAAA,cAAA,GAAKD,KAAK,CAACE,IAAI,CAACC,EAAE,cAAAF,cAAA,uBAAbA,cAAA,CAAeH,EAAE;EAAA,EAAC;EACpD;EACA;EACA,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACR,IAAI;MACHoB,KAAK,EAAER,IAAI,CAACS,MAAM,CAAC,CAAC,CAAC,iBAAIb,OAAA,CAACc,UAAU;QAACC,MAAM,EAAEX,IAAI,CAACS;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE;MAC3D;MAAA;MACAC,OAAO,EAAE,cACPrB,OAAA,CAACH,eAAe,MAAK,SAAS;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC,eACjCpB,OAAA,CAACL,aAAa,MAAK,OAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAC,CAAC,eAC5BpB,OAAA,CAACJ,eAAe,MAAK,SAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAC,CAAC,eAChCpB,OAAA,CAACP,OAAO;QAAY6B,OAAO,eACzBtB,OAAA,CAACF,WAAW;UAAAa,QAAA,GAETN,EAAE,IAAID,IAAI,CAACmB,IAAI,CAAClB,EAAE,KAAKA,EAAE,eAC1BL,OAAA,CAACT,MAAM;YAACiC,IAAI,EAAC,SAAS;YAAAb,QAAA;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAW,CAAC,eAClCpB,OAAA,CAACT,MAAM;YAACiC,IAAI,EAAC,QAAQ;YAAAb,QAAA;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAW,CAAC,eACjCpB,OAAA,CAACT,MAAM;YAAAoB,QAAA;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAW,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACR,CACb;QAAAT,QAAA,eACAX,OAAA,CAACN,gBAAgB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAE;MAAC,GATT,MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAUV,CAAC,CACV;MAAAT,QAAA,gBAEFX,OAAA,CAACyB,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC,eACTpB,OAAA,CAAC0B,OAAO;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC,eACXpB,OAAA,CAAC2B,OAAO;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAU,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACf,CAAC,eACPpB,OAAA,CAAC4B,WAAW;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,eACfpB,OAAA,CAAC6B,QAAQ;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACT,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAlCKF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAoCdA,QAAQ,CAAC8B,SAAS,GAAG;EACnB3B,IAAI,EAAE4B,SAAS,CAACC,KAAK,CAAC;IACpB5B,EAAE,EAAE2B,SAAS,CAACE,MAAM;IACpBX,IAAI,EAAES,SAAS,CAACG,MAAM;IACtBb,OAAO,EAAEU,SAAS,CAACI,MAAM;IACzBC,SAAS,EAAEL,SAAS,CAACG,MAAM;IAC3BN,QAAQ,EAAEG,SAAS,CAACM,OAAO,CAACN,SAAS,CAACG,MAAM,CAAC;IAC7CtB,MAAM,EAAEmB,SAAS,CAACM,OAAO,CAACN,SAAS,CAACG,MAAM;EAC5C,CAAC,CAAC,CAACI;AACL,CAAC;AAED,eAAetC,QAAQ;AAAA,IAAA6B,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}