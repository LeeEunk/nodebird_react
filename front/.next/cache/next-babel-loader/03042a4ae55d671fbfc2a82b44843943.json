{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from './hooks/useInput';\n\n//css 적듯이 문법 적용 js처럼 적용하지 말고\nconst ButtonWrapper = styled.div`\n    margin-top: 10px;\n`;\nconst FormWrapper = styled(Form)`\n    padding: 10px;\n`;\nexport const LoginForm = ({\n  setIsLoggedIn\n}) => {\n  const [id, onChangeId] = useInput('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n\n  // component에 props로 들어가는 함수는 useCallback으로 무조건 최적화 해줘야함\n  // useMemo 는 특정 결과값을 재사용 할 때 사용하는 반면, useCallback 은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용\n  // useCallback은 함수를 캐싱, useMemo는 값을 캐싱\n  // useCallback은 캐싱이니깐 이전 컴포넌트랑 지금 컴포넌트와 동일하다고 함, 배열부분이 바뀌지 않는 이상\n  // 리렌더링하면 return부분 재렌더링되나, 바뀐부분(최적화되지 않는 부분)만 다시 그림\n  // virtual Dom에서 이전이랑 비교해서 달라진 부분만 알려줌 그래도 inline style 사용은 되도록 안하는 것이 좋음\n  // const onChangeId = useCallback((e) => {\n  //     setId(e.target.value);\n  // }, [])\n\n  const onChangePassword = useCallback(e => {\n    setPassword(e.target.value);\n  }, []);\n\n  // 유즈메모는 리렌더링되도 같은 값울 유지하므로 이렇게 적용할 수 있음\n  const style = useMemo(() => ({\n    marginTop: 10\n  }), []);\n\n  // antd는 이미 onFinish에서 e.preventDefault()가 적용되어 있어서 쓰면 안됨\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    // 더미데이터\n    setIsLoggedIn(true);\n  }, [id, password]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    type: \"password\",\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), __jsx(ButtonWrapper, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 34\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\n// validation\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","useCallback","useMemo","useState","Form","Input","Button","Link","styled","PropTypes","useInput","ButtonWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","id","onChangeId","password","setPassword","onChangePassword","e","target","value","style","marginTop","onSubmitForm","console","log","__jsx","onFinish","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","onChange","required","type","htmlType","loading","href","propTypes","func","isRequired"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/LoginForm.js"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport useInput from './hooks/useInput';\r\n\r\n//css 적듯이 문법 적용 js처럼 적용하지 말고\r\nconst ButtonWrapper = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n    padding: 10px;\r\n`;\r\n\r\nexport const LoginForm = ({ setIsLoggedIn }) => {\r\n    const [id, onChangeId] = useInput('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // component에 props로 들어가는 함수는 useCallback으로 무조건 최적화 해줘야함\r\n    // useMemo 는 특정 결과값을 재사용 할 때 사용하는 반면, useCallback 은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용\r\n    // useCallback은 함수를 캐싱, useMemo는 값을 캐싱\r\n    // useCallback은 캐싱이니깐 이전 컴포넌트랑 지금 컴포넌트와 동일하다고 함, 배열부분이 바뀌지 않는 이상\r\n    // 리렌더링하면 return부분 재렌더링되나, 바뀐부분(최적화되지 않는 부분)만 다시 그림\r\n    // virtual Dom에서 이전이랑 비교해서 달라진 부분만 알려줌 그래도 inline style 사용은 되도록 안하는 것이 좋음\r\n    // const onChangeId = useCallback((e) => {\r\n    //     setId(e.target.value);\r\n    // }, [])\r\n\r\n    const onChangePassword = useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    }, [])\r\n\r\n    // 유즈메모는 리렌더링되도 같은 값울 유지하므로 이렇게 적용할 수 있음\r\n    const style = useMemo(() => ({ marginTop: 10}), []);\r\n\r\n    // antd는 이미 onFinish에서 e.preventDefault()가 적용되어 있어서 쓰면 안됨\r\n    const onSubmitForm = useCallback(() => {\r\n        console.log(id, password);\r\n        // 더미데이터\r\n        setIsLoggedIn(true);\r\n    }, [id, password]);\r\n\r\n  return (\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n        <div>\r\n            <label htmlFor='user-id'>아이디</label>\r\n            <br/>\r\n            <Input name=\"user-id\" value={id} onChange={onChangeId} required />\r\n        </div>\r\n        <div>\r\n        <label htmlFor='user-password'>비밀번호</label>\r\n            <br/>\r\n            <Input name=\"user-password\" value={password} type=\"password\" onChange={onChangePassword} required />\r\n        </div>\r\n        {/* style을 객체로 정의하면 객체는 무조건 새로 생성된걸로 인식하기때문에 이거때매 재렌더링됨 */}\r\n        <ButtonWrapper style={style}>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\r\n            <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n        </ButtonWrapper>\r\n    </FormWrapper>\r\n  )\r\n}\r\n\r\n// validation\r\nLoginForm.propTypes = {\r\n    setIsLoggedIn:PropTypes.func.isRequired,\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}