{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\PostCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Button, Card, Popover } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport ButtonGroup from 'antd/es/button/button-group';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  // optional chaining , me가 있으면 id를 출력 없으면 undefined로 출력\n  // const id = me ?.id; \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 34\n      }, this)\n      // 배열 안에 jsx를 넣어줄 땐 늘 key를 붙여줘야 함\n      ,\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","PropTypes","Avatar","Button","Card","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","ButtonGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","PostCard","post","id","useSelector","state","_state$user$me","user","me","children","cover","Images","PostImages","images","fileName","_jsxFileName","lineNumber","columnNumber","actions","content","User","type","Meta","avatar","nickname","title","description","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/PostCard.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Button, Card, Popover } from 'antd';\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons'\r\nimport ButtonGroup from 'antd/es/button/button-group';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  // optional chaining , me가 있으면 id를 출력 없으면 undefined로 출력\r\n  // const id = me ?.id; \r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        // 배열 안에 jsx를 넣어줄 땐 늘 key를 붙여줘야 함\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          <HeartOutlined key=\"heart\"/>,\r\n          <MessageOutlined key=\"comment\"/>,\r\n          <Popover key=\"more\" content={(\r\n            <ButtonGroup>\r\n              {/* 게시자와 게시물 작성자의 id가 나와 같으면 수정 삭제가 가능*/}\r\n              {id && post.User.id === id ? (\r\n              <>\r\n                <Button type='primary'>수정</Button>\r\n                <Button type='danger'>삭제</Button>\r\n              </>\r\n              ) :  <Button>신고</Button> }\r\n            </ButtonGroup>\r\n          )}>\r\n            <EllipsisOutlined />\r\n          </Popover>\r\n        ]}\r\n      >\r\n        <Card.Meta \r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      {/* <CommentForm />\r\n      <Comments /> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}