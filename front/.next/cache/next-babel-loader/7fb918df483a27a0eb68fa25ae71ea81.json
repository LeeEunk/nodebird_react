{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\PostForm.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar PostForm = function PostForm() {\n  _s();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    imagePaths = _useSelector.imagePaths;\n  var _useState = useState(''),\n    text = _useState[0],\n    setText = _useState[1];\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var dispatch = useDispatch();\n  var onsubmit = useCallback(function () {\n    dispatch(addPost);\n  }, []);\n\n  // useRef() 실제 DOM에 접근하기 위해 사용\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.onClick();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch(uploadImage(imageFormData));\n  });\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch(postSlice.actions.remove);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onsubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLenth: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n_s(PostForm, \"+mXqVd/m/UDfEwoqmW22JU5yDd8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Button","Form","Input","React","useCallback","useRef","useState","useDispatch","useSelector","addPost","jsxDEV","_jsxDEV","PostForm","_s","_useSelector","state","post","imagePaths","_useState","text","setText","onChangeText","e","target","value","dispatch","onsubmit","imageInput","onClickImageUpload","current","onClick","onChangeImages","console","log","files","imageFormData","FormData","forEach","call","f","append","uploadImage","onRemoveImage","index","postSlice","actions","remove","style","margin","encType","onFinish","children","TextArea","onChange","maxLenth","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_this","type","name","multiple","hidden","ref","display","htmlType","map","v","src","width","alt","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/PostForm.js"],"sourcesContent":["import { Button, Form, Input } from 'antd'\r\nimport React, { useCallback, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const {imagePaths} = useSelector((state) => state.post);\r\n    \r\n    const [text, setText] = useState('');\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    },[]);\r\n\r\n    const dispatch = useDispatch();\r\n    const onsubmit = useCallback(() => {\r\n        dispatch(addPost);\r\n    }, []);\r\n\r\n    // useRef() 실제 DOM에 접근하기 위해 사용\r\n    const imageInput = useRef()\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.onClick();\r\n    },[imageInput.current]);\r\n\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('images', e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f) => {\r\n            imageFormData.append('image', f);\r\n        });\r\n        dispatch(uploadImage(imageFormData));\r\n    });\r\n\r\n    const onRemoveImage = useCallback((index) => () => {\r\n        dispatch(postSlice.actions.remove)\r\n    })\r\n\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px'}} encType='multipart/form-data' onFinish={onsubmit}>\r\n        <Input.TextArea value={text} onChange={onChangeText} maxLenth={140} placeholder=\"어떤 신기한 일이 있었나요?\"/>\r\n        <div>\r\n            <input type='file' name='image' multiple hidden ref={imageInput} onChange={onChangeImages} style={{display: 'none'}}/>\r\n            <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n            <Button type=\"primary\" style={{ float: 'right'}} htmlType=\"submit\">짹짹</Button>\r\n        </div>\r\n        <div>\r\n            {/* 이미지 업로드했을 때 이미지 미리보기 */}\r\n            {imagePaths.map((v) => (\r\n                <div key={v} style={{display: 'inline-block'}}>\r\n                    <img src={v} style={{width: '200px' }} alt={v}/>\r\n                    <div>\r\n                        <Button>제거</Button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PostForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}