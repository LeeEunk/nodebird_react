{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\imagesZoom\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes, { symbol } from 'prop-types';\nimport Slick from 'react-slick';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons';\n\n// func`` == func() 함수 호출 문법 tagged template literal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overlay = styled.div`\n// 화면이 꽉참\n  position: fixed;\n  z-index: 5000;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\nconst Header = styled.header`\n    height: 44px;\n    background: white;\n    position: relative;\n    padding: 0;\n    text-align: center;\n\n    & h1 {\n        margin: 0;\n        font-size: 17px;\n        color: #333;\n        line-height: 44px;\n    }\n\n    // & button {\n    //     position: absolute;\n    //     right: 0;\n    //     top: 0;\n    //     padding: 15px;\n    //     line-height: 14px;\n    //     cursor: pointer;\n    // }\n`;\nconst CloseBtn = styled(CloseOutlined)`\n    position: absolute;\n    right: 0;\n    top: 0;\n    padding: 15px;\n    line-height: 14px;\n    cursor: pointer;\n`;\nconst SlickWrapper = styled.div`\n    height: calc(100% - 44px);\n    background: #090909;\n`;\nconst ImgWrapper = styled.div`\n    padding: 32px;\n    text-align: center;\n\n    & img {\n        margin: 0 auto;\n        max-height: 750px;\n    }\n`;\nconst Indicator = styled.div`\n    text-align: center;\n\n    & > div {\n        width: 75px;\n        height: 30px;\n        line-height: 30px;\n        border-radius: 15px;\n        background: #313131;\n        display: inline-block;\n        text-align: center;\n        color: white;\n        font-size: 15px;\n    }\n`;\nconst Global = createGlobalStyle`\n    .slick-slide {\n        display: inline-block;\n    }\n        // .ant-card-cover {\n        //     transform: none !important;\n        // }\n`;\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  return /*#__PURE__*/_jsxDEV(Overlay, {\n    children: [/*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CloseBtn, {\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SlickWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Slick, {\n          initialSlide: 0\n          // 현재 슬라이드 상태값 유지\n          ,\n          afterChange: slide => setCurrentSlide(slide)\n          // 무한으로 넘김\n          ,\n          infinite: true,\n          arrows: false\n          // 한번에 하나씩만 슬라이드 보여주기\n          ,\n          slidesToShow: 1\n          // 한번에 하나씩만 스크롤하기\n          ,\n          slidesToScroll: 1,\n          children: images.map(v => /*#__PURE__*/_jsxDEV(ImgWrapper, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: v.src,\n              alt: v.src\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)\n          }, v.src, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: currentSlide + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"names":["React","useState","PropTypes","symbol","Slick","styled","createGlobalStyle","CloseOutlined","jsxDEV","_jsxDEV","Overlay","div","Header","header","CloseBtn","SlickWrapper","ImgWrapper","Indicator","Global","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","initialSlide","afterChange","slide","infinite","arrows","slidesToShow","slidesToScroll","map","v","src","alt","propTypes","arrayOf","object","isRequired","func"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/imagesZoom/index.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes, { symbol } from 'prop-types'\r\nimport Slick from 'react-slick'\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n\r\n// func`` == func() 함수 호출 문법 tagged template literal\r\nconst Overlay = styled.div`\r\n// 화면이 꽉참\r\n  position: fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    height: 44px;\r\n    background: white;\r\n    position: relative;\r\n    padding: 0;\r\n    text-align: center;\r\n\r\n    & h1 {\r\n        margin: 0;\r\n        font-size: 17px;\r\n        color: #333;\r\n        line-height: 44px;\r\n    }\r\n\r\n    // & button {\r\n    //     position: absolute;\r\n    //     right: 0;\r\n    //     top: 0;\r\n    //     padding: 15px;\r\n    //     line-height: 14px;\r\n    //     cursor: pointer;\r\n    // }\r\n`;\r\n\r\nconst CloseBtn = styled(CloseOutlined\r\n\r\n)`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    padding: 15px;\r\n    line-height: 14px;\r\n    cursor: pointer;\r\n`\r\n\r\nconst SlickWrapper = styled.div`\r\n    height: calc(100% - 44px);\r\n    background: #090909;\r\n`;\r\n\r\nconst ImgWrapper = styled.div`\r\n    padding: 32px;\r\n    text-align: center;\r\n\r\n    & img {\r\n        margin: 0 auto;\r\n        max-height: 750px;\r\n    }\r\n`;\r\n\r\nconst Indicator = styled.div`\r\n    text-align: center;\r\n\r\n    & > div {\r\n        width: 75px;\r\n        height: 30px;\r\n        line-height: 30px;\r\n        border-radius: 15px;\r\n        background: #313131;\r\n        display: inline-block;\r\n        text-align: center;\r\n        color: white;\r\n        font-size: 15px;\r\n    }\r\n`\r\nconst Global = createGlobalStyle`\r\n    .slick-slide {\r\n        display: inline-block;\r\n    }\r\n        // .ant-card-cover {\r\n        //     transform: none !important;\r\n        // }\r\n`;\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n  return (\r\n    <Overlay>\r\n        <Global/>\r\n        <Header>\r\n            <h1>상세 이미지</h1>\r\n            <CloseBtn onClick={onClose}>X</CloseBtn>\r\n        </Header>\r\n        <SlickWrapper>\r\n            <div>\r\n                <Slick         \r\n                    initialSlide={0}\r\n                    // 현재 슬라이드 상태값 유지\r\n                    afterChange={(slide) => setCurrentSlide(slide)}\r\n                    // 무한으로 넘김\r\n                    infinite\r\n                    arrows={false}\r\n                    // 한번에 하나씩만 슬라이드 보여주기\r\n                    slidesToShow={1}\r\n                    // 한번에 하나씩만 스크롤하기\r\n                    slidesToScroll={1}\r\n                >\r\n                    {images.map((v) => (\r\n                        <ImgWrapper key={v.src}>\r\n                            <img src={v.src} alt={v.src}/>\r\n                        </ImgWrapper>\r\n                    ))}\r\n                </Slick>\r\n                <Indicator>\r\n                    <div>\r\n                        {/* 현재 몇번째 슬라이드를 보고 있는지 */}\r\n                        {currentSlide + 1}\r\n                        \r\n                    </div>\r\n                </Indicator>\r\n            </div>\r\n        </SlickWrapper>\r\n    </Overlay>\r\n    \r\n  )\r\n}\r\n\r\nImagesZoom.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImagesZoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}