{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { HYDRATE } from 'next-redux-wrapper';\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from 'redux';\n\n// reducer는 스위치문이 들어있는 함수임\n// reducer 쪼개는 기준\nvar initialState = {\n  user: {},\n  post: {}\n};\n\n// 기본 state를 변경하고 싶을때, 늘 액션을 만들어서 히스토리를 유지하곤 변경 진행하기\n\n// const changeNickname = {\n//     type: 'CHANGE_NICKNAME',\n//     data : 'dooyoo',\n// }   \n\n// 액션을 만들어주는 함수를 만들기 (이름만 여러번 변경하고 싶을때 새로 계속 객체를 생성해야 하는게 낭비이므로)\n// 동적으로 생성\n// action creator\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n};\n//changeNickname('dooyoo')\n// store.dispatch(changeNickname('member kyung'))\n\n// (이전상태, 액션) => 다음상태\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    // action은 객체임\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      // 초기화\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","user","post","combineReducers","initialState","changeNickname","data","type","rootReducer","index","state","arguments","length","undefined","action","console","log","_objectSpread","payload"],"sources":["C:/Users/user/Downloads/react-nodebird/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\nimport { combineReducers } from 'redux';\r\n\r\n// reducer는 스위치문이 들어있는 함수임\r\n// reducer 쪼개는 기준\r\nconst initialState = {\r\n    user: {\r\n        \r\n    },\r\n    post: {\r\n        \r\n   }\r\n}\r\n\r\n\r\n// 기본 state를 변경하고 싶을때, 늘 액션을 만들어서 히스토리를 유지하곤 변경 진행하기\r\n\r\n// const changeNickname = {\r\n//     type: 'CHANGE_NICKNAME',\r\n//     data : 'dooyoo',\r\n// }   \r\n\r\n// 액션을 만들어주는 함수를 만들기 (이름만 여러번 변경하고 싶을때 새로 계속 객체를 생성해야 하는게 낭비이므로)\r\n// 동적으로 생성\r\n// action creator\r\nconst changeNickname = (data) => {\r\n    return {\r\n        type : 'CHANGE_NICKNAME',\r\n        data,\r\n    }\r\n};\r\n//changeNickname('dooyoo')\r\n// store.dispatch(changeNickname('member kyung'))\r\n\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = combineReducers({\r\n    index : (state = {}, action) => {\r\n    // action은 객체임\r\n    switch(action.type) {\r\n        case HYDRATE:\r\n            console.log('HYDRATE', action);\r\n            return { ...state, ...action.payload };\r\n\r\n        // 초기화\r\n        default: \r\n            return state;\r\n    }\r\n    },\r\n    user,\r\n    post,\r\n});\r\n\r\nexport default rootReducer;"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,eAAe,QAAQ,OAAO;;AAEvC;AACA;AACA,IAAMC,YAAY,GAAG;EACjBH,IAAI,EAAE,CAEN,CAAC;EACDC,IAAI,EAAE,CAEP;AACH,CAAC;;AAGD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,IAAI,EAAK;EAC7B,OAAO;IACHC,IAAI,EAAG,iBAAiB;IACxBD,IAAI,EAAJA;EACJ,CAAC;AACL,CAAC;AACD;AACA;;AAGA;AACA,IAAME,WAAW,GAAGL,eAAe,CAAC;EAChCM,KAAK,EAAG,SAARA,KAAKA,CAAA,EAA2B;IAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAC3B;IACA,QAAOC,MAAM,CAACP,IAAI;MACd,KAAKP,OAAO;QACRe,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC;QAC9B,OAAAG,aAAA,CAAAA,aAAA,KAAYP,KAAK,GAAKI,MAAM,CAACI,OAAO;;MAExC;MACA;QACI,OAAOR,KAAK;IACpB;EACA,CAAC;EACDT,IAAI,EAAJA,IAAI;EACJC,IAAI,EAAJA;AACJ,CAAC,CAAC;AAEF,eAAeM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}