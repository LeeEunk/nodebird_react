{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\pages\\\\index.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { useInView } from 'react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Home = function Home() {\n  _s();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector2.mainPosts,\n    hasMorePosts = _useSelector2.hasMorePosts,\n    loadPostsLoading = _useSelector2.loadPostsLoading;\n  var _useInView = useInView(),\n    _useInView2 = _slicedToArray(_useInView, 2),\n    ref = _useInView2[0],\n    inView = _useInView2[1];\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    if (inView && hasMorePosts && !loadPostsLoading) {\n      var _mainPosts;\n      var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId: lastId\n      });\n    }\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts]);\n\n  // useEffect(() => {\n  //     function onScroll() {\n  //         // scrollY: 얼마나 내렸는지\n  //         // clientHeight: 화면 보이는 길이\n  //         // scrollHeight: 총길이\n  //         console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n  //         // 다내리면 새로운거 로딩해라\n  //         if( window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight ) {\n  //            if(hasMorePosts) {\n  //                 dispatch({\n  //                 type: LOAD_POSTS_REQUEST,\n  //             });\n  //         }\n  //     }\n  //     }\n  //     window.addEventListener('scroll', onScroll);\n  //     return () => {\n  //         window.removeEventListener('scroll', onScroll); // 사용하고 메모리 관리를 위해 반드시 해지해야함\n  //     };\n  // },[hasMorePosts]);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 38\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: hasMorePosts && !loadPostsLoading ? ref : undefined,\n      style: {\n        height: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, _this);\n};\n_s(Home, \"LFSOx83d1DpjXrTqxWdZTROuW3A=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInView];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","AppLayout","useDispatch","useSelector","PostForm","PostCard","LOAD_POSTS_REQUEST","useInView","jsxDEV","_jsxDEV","Home","_s","dispatch","_useSelector","state","user","me","_useSelector2","post","mainPosts","hasMorePosts","loadPostsLoading","_useInView","_useInView2","_slicedToArray","ref","inView","type","_mainPosts","lastId","length","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","map","undefined","style","height","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/react-nodebird/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const {me} = useSelector((state) => state.user);\r\n    const {mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n    const [ref, inView] = useInView();\r\n\r\n    useEffect (() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n        });\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n        if (inView && hasMorePosts && !loadPostsLoading) {\r\n            const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n            dispatch({\r\n                type: LOAD_POSTS_REQUEST,\r\n                lastId,\r\n            });\r\n        }\r\n    }, [inView, hasMorePosts, loadPostsLoading, mainPosts])\r\n\r\n    // useEffect(() => {\r\n    //     function onScroll() {\r\n    //         // scrollY: 얼마나 내렸는지\r\n    //         // clientHeight: 화면 보이는 길이\r\n    //         // scrollHeight: 총길이\r\n    //         console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n    //         // 다내리면 새로운거 로딩해라\r\n    //         if( window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight ) {\r\n    //            if(hasMorePosts) {\r\n    //                 dispatch({\r\n    //                 type: LOAD_POSTS_REQUEST,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     }\r\n    //     window.addEventListener('scroll', onScroll);\r\n    //     return () => {\r\n    //         window.removeEventListener('scroll', onScroll); // 사용하고 메모리 관리를 위해 반드시 해지해야함\r\n    //     };\r\n    // },[hasMorePosts]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            {/* PostForm은 로그인한 사람들에게만 보임 */}\r\n            {me && <PostForm />}\r\n            {/* 반복문이 바뀌지 않으면 key를 index로 써도 되나 바뀔 경우, 그러면 안됨 -> 고유 id로 지정 */}\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />) }\r\n            <div ref={hasMorePosts && !loadPostsLoading ? ref: undefined} style={{ height: 10}} />\r\n            \r\n        </AppLayout>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EAAAC,EAAA;EACf,IAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,IAAAW,YAAA,GAAaV,WAAW,CAAC,UAACW,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAxCC,EAAE,GAAAH,YAAA,CAAFG,EAAE;EACT,IAAAC,aAAA,GAAqDd,WAAW,CAAC,UAACW,KAAK;MAAA,OAAKA,KAAK,CAACI,IAAI;IAAA,EAAC;IAAhFC,SAAS,GAAAF,aAAA,CAATE,SAAS;IAAEC,YAAY,GAAAH,aAAA,CAAZG,YAAY;IAAEC,gBAAgB,GAAAJ,aAAA,CAAhBI,gBAAgB;EAChD,IAAAC,UAAA,GAAsBf,SAAS,CAAC,CAAC;IAAAgB,WAAA,GAAAC,cAAA,CAAAF,UAAA;IAA1BG,GAAG,GAAAF,WAAA;IAAEG,MAAM,GAAAH,WAAA;EAElBvB,SAAS,CAAE,YAAM;IACbY,QAAQ,CAAC;MACLe,IAAI,EAAErB;IACV,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAELN,SAAS,CAAE,YAAM;IACb,IAAI0B,MAAM,IAAIN,YAAY,IAAI,CAACC,gBAAgB,EAAE;MAAA,IAAAO,UAAA;MAC7C,IAAMC,MAAM,IAAAD,UAAA,GAAGT,SAAS,CAACA,SAAS,CAACW,MAAM,GAAG,CAAC,CAAC,cAAAF,UAAA,uBAA/BA,UAAA,CAAiCG,EAAE;MAClDnB,QAAQ,CAAC;QACLe,IAAI,EAAErB,kBAAkB;QACxBuB,MAAM,EAANA;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACH,MAAM,EAAEN,YAAY,EAAEC,gBAAgB,EAAEF,SAAS,CAAC,CAAC;;EAEvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIV,OAAA,CAACR,SAAS;IAAA+B,QAAA,GAELhB,EAAE,iBAAIP,OAAA,CAACL,QAAQ;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,EAElBlB,SAAS,CAACmB,GAAG,CAAC,UAACpB,IAAI;MAAA,oBAAKT,OAAA,CAACJ,QAAQ;QAAea,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACa,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAe,CAAC;IAAA,EAAC,eAChE5B,OAAA;MAAKgB,GAAG,EAAEL,YAAY,IAAI,CAACC,gBAAgB,GAAGI,GAAG,GAAEc,SAAU;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAE;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAE/E,CAAC;AAEpB,CAAC;AAAA1B,EAAA,CArDKD,IAAI;EAAA,QACWR,WAAW,EACfC,WAAW,EAC6BA,WAAW,EAC1CI,SAAS;AAAA;AAAAmC,EAAA,GAJ7BhC,IAAI;AAuDV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}