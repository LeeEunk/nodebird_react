{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { useInView } from 'react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (inView && hasMorePosts && !loadPostsLoading) {\n      var _mainPosts;\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId\n      });\n    }\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts]);\n\n  // useEffect(() => {\n  //     function onScroll() {\n  //         // scrollY: 얼마나 내렸는지\n  //         // clientHeight: 화면 보이는 길이\n  //         // scrollHeight: 총길이\n  //         console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n  //         // 다내리면 새로운거 로딩해라\n  //         if( window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight ) {\n  //            if(hasMorePosts) {\n  //                 dispatch({\n  //                 type: LOAD_POSTS_REQUEST,\n  //             });\n  //         }\n  //     }\n  //     }\n  //     window.addEventListener('scroll', onScroll);\n  //     return () => {\n  //         window.removeEventListener('scroll', onScroll); // 사용하고 메모리 관리를 위해 반드시 해지해야함\n  //     };\n  // },[hasMorePosts]);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 38\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: hasMorePosts && !loadPostsLoading ? ref : undefined,\n      style: {\n        height: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\nexport default Home;","map":{"version":3,"names":["React","useEffect","AppLayout","useDispatch","useSelector","PostForm","PostCard","LOAD_POSTS_REQUEST","useInView","jsxDEV","_jsxDEV","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","ref","inView","type","_mainPosts","lastId","length","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","undefined","style","height"],"sources":["C:/Users/user/Downloads/react-nodebird/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const {me} = useSelector((state) => state.user);\r\n    const {mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n    const [ref, inView] = useInView();\r\n\r\n    useEffect (() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n        });\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n        if (inView && hasMorePosts && !loadPostsLoading) {\r\n            const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n            dispatch({\r\n                type: LOAD_POSTS_REQUEST,\r\n                lastId,\r\n            });\r\n        }\r\n    }, [inView, hasMorePosts, loadPostsLoading, mainPosts])\r\n\r\n    // useEffect(() => {\r\n    //     function onScroll() {\r\n    //         // scrollY: 얼마나 내렸는지\r\n    //         // clientHeight: 화면 보이는 길이\r\n    //         // scrollHeight: 총길이\r\n    //         console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n    //         // 다내리면 새로운거 로딩해라\r\n    //         if( window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight ) {\r\n    //            if(hasMorePosts) {\r\n    //                 dispatch({\r\n    //                 type: LOAD_POSTS_REQUEST,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     }\r\n    //     window.addEventListener('scroll', onScroll);\r\n    //     return () => {\r\n    //         window.removeEventListener('scroll', onScroll); // 사용하고 메모리 관리를 위해 반드시 해지해야함\r\n    //     };\r\n    // },[hasMorePosts]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            {/* PostForm은 로그인한 사람들에게만 보임 */}\r\n            {me && <PostForm />}\r\n            {/* 반복문이 바뀌지 않으면 key를 index로 써도 되나 바뀔 경우, 그러면 안됨 -> 고유 id로 지정 */}\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />) }\r\n            <div ref={hasMorePosts && !loadPostsLoading ? ref: undefined} style={{ height: 10}} />\r\n            \r\n        </AppLayout>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAACU;EAAE,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAC/C,MAAM;IAACC,SAAS;IAAEC,YAAY;IAAEC;EAAiB,CAAC,GAAGd,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACK,IAAI,CAAC;EACvF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGb,SAAS,CAAC,CAAC;EAEjCP,SAAS,CAAE,MAAM;IACbW,QAAQ,CAAC;MACLU,IAAI,EAAEf;IACV,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAELN,SAAS,CAAE,MAAM;IACb,IAAIoB,MAAM,IAAIJ,YAAY,IAAI,CAACC,gBAAgB,EAAE;MAAA,IAAAK,UAAA;MAC7C,MAAMC,MAAM,IAAAD,UAAA,GAAGP,SAAS,CAACA,SAAS,CAACS,MAAM,GAAG,CAAC,CAAC,cAAAF,UAAA,uBAA/BA,UAAA,CAAiCG,EAAE;MAClDd,QAAQ,CAAC;QACLU,IAAI,EAAEf,kBAAkB;QACxBiB;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACH,MAAM,EAAEJ,YAAY,EAAEC,gBAAgB,EAAEF,SAAS,CAAC,CAAC;;EAEvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIN,OAAA,CAACR,SAAS;IAAAyB,QAAA,GAELd,EAAE,iBAAIH,OAAA,CAACL,QAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAElBf,SAAS,CAACgB,GAAG,CAAEb,IAAI,iBAAKT,OAAA,CAACJ,QAAQ;MAAea,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACO,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC,eAChErB,OAAA;MAAKU,GAAG,EAAEH,YAAY,IAAI,CAACC,gBAAgB,GAAGE,GAAG,GAAEa,SAAU;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAE;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/E,CAAC;AAEpB,CAAC;AAED,eAAepB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}