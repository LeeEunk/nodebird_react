{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\LoginForm.js\",\n  _templateObject,\n  _templateObject2,\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport useInput from './hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST, loginRequestAction } from '../reducers/user';\n\n//css 적듯이 문법 적용 js처럼 적용하지 말고\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ButtonWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    padding: 10px;\\n    margin-top: 10px;\\n\"])));\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    padding: 10px;\\n    margin-top: 10px;\\n\"])));\n_c2 = FormWrapper;\nvar LoginForm = function LoginForm() {\n  _s();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    logInLoading = _useSelector.logInLoading,\n    logInError = _useSelector.logInError;\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 2),\n    email = _useInput2[0],\n    onChangeEmail = _useInput2[1];\n  var _useInput3 = useInput(''),\n    _useInput4 = _slicedToArray(_useInput3, 2),\n    password = _useInput4[0],\n    onChangePassword = _useInput4[1];\n  // const [password, setPassword] = useState('');\n\n  useEffect(function () {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n\n  // component에 props로 들어가는 함수는 useCallback으로 무조건 최적화 해줘야함\n  // useMemo 는 특정 결과값을 재사용 할 때 사용하는 반면, useCallback 은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용\n  // useCallback은 함수를 캐싱, useMemo는 값을 캐싱\n  // useCallback은 캐싱이니깐 이전 컴포넌트랑 지금 컴포넌트와 동일하다고 함, 배열부분이 바뀌지 않는 이상\n  // 리렌더링하면 return부분 재렌더링되나, 바뀐부분(최적화되지 않는 부분)만 다시 그림\n  // virtual Dom에서 이전이랑 비교해서 달라진 부분만 알려줌 그래도 inline style 사용은 되도록 안하는 것이 좋음\n\n  // const onChangePassword = useCallback((e) => {\n  //     setPassword(e.target.value);\n  // }, [])\n\n  // 유즈메모는 리렌더링되도 같은 값울 유지하므로 이렇게 적용할 수 있음\n  // const style = useMemo(() => ({ marginTop: 10}), []);\n\n  // antd는 이미 onFinish에서 e.preventDefault()가 적용되어 있어서 쓰면 안됨\n  var onSubmitForm = useCallback(function () {\n    console.log(email, password);\n    // 더미데이터\n    // setIsLoggedIn(true);\n    dispatch(loginRequestAction({\n      email: email,\n      password: password\n    }));\n    // dispatch({\n    //     type: LOG_IN_REQUEST,\n    //     data: { email, password },\n    // });\n  }, [email, password]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-email\",\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-email\",\n        type: \"email\",\n        value: email,\n        onChange: onChangeEmail,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-password\",\n        value: password,\n        type: \"password\",\n        onChange: onChangePassword,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: logInLoading,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 37\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 34\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, _this);\n};\n_s(LoginForm, \"tKkOVmPqh2u0qZseKATViWPnz+M=\", false, function () {\n  return [useDispatch, useSelector, useInput, useInput];\n});\n_c3 = LoginForm;\nexport default LoginForm;\n// validation\n// LoginForm.propTypes = {\n//     setIsLoggedIn:PropTypes.func.isRequired,\n// }\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"names":["React","useCallback","useEffect","Form","Input","Button","Link","styled","useInput","useDispatch","useSelector","LOG_IN_REQUEST","loginRequestAction","jsxDEV","_jsxDEV","ButtonWrapper","div","_templateObject","_taggedTemplateLiteral","_c","FormWrapper","_templateObject2","_c2","LoginForm","_s","dispatch","_useSelector","state","user","logInLoading","logInError","_useInput","_useInput2","_slicedToArray","email","onChangeEmail","_useInput3","_useInput4","password","onChangePassword","alert","onSubmitForm","console","log","onFinish","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","_this","name","type","value","onChange","required","style","marginTop","htmlType","loading","href","_c3","$RefreshReg$"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/LoginForm.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport {Form, Input, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\n\r\nimport useInput from './hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOG_IN_REQUEST, loginRequestAction } from '../reducers/user';\r\n\r\n//css 적듯이 문법 적용 js처럼 적용하지 말고\r\nconst ButtonWrapper = styled.div`\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch()\r\n    const { logInLoading, logInError } = useSelector((state) => state.user);\r\n    const [email, onChangeEmail] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    // const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(logInError) {\r\n            alert(logInError) ;\r\n    }\r\n}, [logInError]);\r\n\r\n    // component에 props로 들어가는 함수는 useCallback으로 무조건 최적화 해줘야함\r\n    // useMemo 는 특정 결과값을 재사용 할 때 사용하는 반면, useCallback 은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용\r\n    // useCallback은 함수를 캐싱, useMemo는 값을 캐싱\r\n    // useCallback은 캐싱이니깐 이전 컴포넌트랑 지금 컴포넌트와 동일하다고 함, 배열부분이 바뀌지 않는 이상\r\n    // 리렌더링하면 return부분 재렌더링되나, 바뀐부분(최적화되지 않는 부분)만 다시 그림\r\n    // virtual Dom에서 이전이랑 비교해서 달라진 부분만 알려줌 그래도 inline style 사용은 되도록 안하는 것이 좋음\r\n    \r\n    // const onChangePassword = useCallback((e) => {\r\n    //     setPassword(e.target.value);\r\n    // }, [])\r\n\r\n    // 유즈메모는 리렌더링되도 같은 값울 유지하므로 이렇게 적용할 수 있음\r\n    // const style = useMemo(() => ({ marginTop: 10}), []);\r\n\r\n    // antd는 이미 onFinish에서 e.preventDefault()가 적용되어 있어서 쓰면 안됨\r\n    const onSubmitForm = useCallback(() => {\r\n        console.log(email, password);\r\n        // 더미데이터\r\n        // setIsLoggedIn(true);\r\n        dispatch(loginRequestAction({ email, password }));\r\n        // dispatch({\r\n        //     type: LOG_IN_REQUEST,\r\n        //     data: { email, password },\r\n        // });\r\n    }, [email, password]);\r\n\r\n  return (\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n        <div>\r\n            <label htmlFor='user-email'>이메일</label>\r\n            <br/>\r\n            <Input name=\"user-email\" type=\"email\" value={email} onChange={onChangeEmail} required />\r\n        </div>\r\n        <div>\r\n        <label htmlFor='user-password'>비밀번호</label>\r\n            <br/>\r\n            <Input name=\"user-password\" value={password} type=\"password\" onChange={onChangePassword} required />\r\n        </div>\r\n        {/* style을 객체로 정의하면 객체는 무조건 새로 생성된걸로 인식하기때문에 이거때매 재렌더링됨 */}\r\n        <ButtonWrapper style={{ marginTop : \"10px\"}}>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>로그인</Button>\r\n            <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n        </ButtonWrapper>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n// validation\r\n// LoginForm.propTypes = {\r\n//     setIsLoggedIn:PropTypes.func.isRequired,\r\n// }\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}