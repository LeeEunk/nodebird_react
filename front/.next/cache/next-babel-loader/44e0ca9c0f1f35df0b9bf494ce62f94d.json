{"ast":null,"code":"//configureStore.js\nimport { createWrapper } from 'next-redux-wrapper';\nimport { createStore } from 'redux';\nimport reducer from '../reducers';\nconst configureStore = () => {\n  // redux middleware 붙이기\n\n  // state와 reducer 포함하는 것을 store라고 함\n  // const store = createStore(reducer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'dooyoo'\n  });\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  // 개발할때 debug를 true로 하면 더 자세하게 내용을 보여주니깐 변경하면 좋음\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","createStore","reducer","configureStore","store","dispatch","type","data","wrapper","debug"],"sources":["C:/Users/user/Downloads/react-nodebird/front/store/configureStore.js"],"sourcesContent":["//configureStore.js\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { createStore } from 'redux';\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = () => {\r\n    // redux middleware 붙이기\r\n    \r\n    // state와 reducer 포함하는 것을 store라고 함\r\n    // const store = createStore(reducer);\r\n    store.dispatch({\r\n        type: 'CHANGE_NICKNAME',\r\n        data: 'dooyoo',\r\n    })\r\n    return store;\r\n\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    // 개발할때 debug를 true로 하면 더 자세하게 내용을 보여주니깐 변경하면 좋음\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,WAAW,QAAQ,OAAO;AAEnC,OAAOC,OAAO,MAAM,aAAa;AAEjC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB;;EAEA;EACA;EACAC,KAAK,CAACC,QAAQ,CAAC;IACXC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACV,CAAC,CAAC;EACF,OAAOH,KAAK;AAEhB,CAAC;AAED,MAAMI,OAAO,GAAGR,aAAa,CAACG,cAAc,EAAE;EAC1C;EACAM,KAAK;AACT,CAAC,CAAC;AAEF,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}