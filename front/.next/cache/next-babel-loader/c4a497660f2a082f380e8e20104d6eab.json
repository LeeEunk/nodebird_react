{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n// page들에 공통처리\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport wrapper from '../store/configureStore';\n\n// App 은 index.js의 부모\n// pages들의 공통 부분 설정\nvar App = function App(_ref) {\n  var Component = _ref.Component;\n  //index.js 의 return 부분이 여기의 component 를 의미함\n\n  return (\n    // redux 사용 시, 페이지를 provider로 감싸줘야함, 단, next는 안써도 됨\n    // <Provider store={store}>\n    __jsx(React.Fragment, null, __jsx(Head, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }), __jsx(\"title\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"NodeBird\")), __jsx(Component, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }))\n    // </Provider>\n  );\n};\n_c = App;\nApp.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\nexport default _c2 = wrapper.withRedux(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Head","PropTypes","wrapper","App","_ref","Component","__jsx","Fragment","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","charSet","_c","propTypes","elementType","isRequired","_c2","withRedux","$RefreshReg$"],"sources":["C:/Users/user/Downloads/react-nodebird/front/pages/_app.js"],"sourcesContent":["// page들에 공통처리\r\nimport React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport wrapper from '../store/configureStore';\r\n\r\n\r\n// App 은 index.js의 부모\r\n// pages들의 공통 부분 설정\r\nconst App = ( {Component} ) => { //index.js 의 return 부분이 여기의 component 를 의미함\r\n\r\n    return(\r\n        // redux 사용 시, 페이지를 provider로 감싸줘야함, 단, next는 안써도 됨\r\n        // <Provider store={store}>\r\n        <>\r\n            <Head>\r\n                <meta charSet='utf-8'/>\r\n                <title>NodeBird</title>\r\n            </Head>\r\n            <Component/>\r\n        </>\r\n        // </Provider>\r\n    )\r\n};\r\n\r\nApp.propTypes = {\r\n    Component: PropTypes.elementType.isRequired,\r\n}\r\n\r\nexport default wrapper.withRedux(App);"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,OAAO,MAAM,yBAAyB;;AAG7C;AACA;AACA,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAAC,IAAA,EAAsB;EAAA,IAAhBC,SAAS,GAAAD,IAAA,CAATC,SAAS;EAAS;;EAE7B;IACI;IACA;IACAC,KAAA,CAAAP,KAAA,CAAAQ,QAAA,QACID,KAAA,CAACN,IAAI;MAAAQ,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACDR,KAAA;MAAMS,OAAO,EAAC,OAAO;MAAAP,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAC,CAAC,EACvBR,KAAA;MAAAE,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,aAAsB,CACpB,CAAC,EACPR,KAAA,CAACD,SAAS;MAAAG,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAC,CACb;IACF;EAAA;AAER,CAAC;AAACE,EAAA,GAdIb,GAAG;AAgBTA,GAAG,CAACc,SAAS,GAAG;EACZZ,SAAS,EAAEJ,SAAS,CAACiB,WAAW,CAACC;AACrC,CAAC;AAED,eAAAC,GAAA,GAAelB,OAAO,CAACmB,SAAS,CAAClB,GAAG,CAAC;AAAC,IAAAa,EAAA,EAAAI,GAAA;AAAAE,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}