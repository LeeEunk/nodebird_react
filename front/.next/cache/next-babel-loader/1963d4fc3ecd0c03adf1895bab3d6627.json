{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\LoginForm.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport useInput from './hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST, loginRequestAction } from '../reducers/user';\n\n//css 적듯이 문법 적용 js처럼 적용하지 말고\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonWrapper = styled.div`\n    padding: 10px;\n    margin-top: 10px;\n`;\nconst FormWrapper = styled(Form)`\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n`;\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    logInLoading\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  // const [password, setPassword] = useState('');\n\n  // component에 props로 들어가는 함수는 useCallback으로 무조건 최적화 해줘야함\n  // useMemo 는 특정 결과값을 재사용 할 때 사용하는 반면, useCallback 은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용\n  // useCallback은 함수를 캐싱, useMemo는 값을 캐싱\n  // useCallback은 캐싱이니깐 이전 컴포넌트랑 지금 컴포넌트와 동일하다고 함, 배열부분이 바뀌지 않는 이상\n  // 리렌더링하면 return부분 재렌더링되나, 바뀐부분(최적화되지 않는 부분)만 다시 그림\n  // virtual Dom에서 이전이랑 비교해서 달라진 부분만 알려줌 그래도 inline style 사용은 되도록 안하는 것이 좋음\n\n  // const onChangePassword = useCallback((e) => {\n  //     setPassword(e.target.value);\n  // }, [])\n\n  // 유즈메모는 리렌더링되도 같은 값울 유지하므로 이렇게 적용할 수 있음\n  // const style = useMemo(() => ({ marginTop: 10}), []);\n\n  // antd는 이미 onFinish에서 e.preventDefault()가 적용되어 있어서 쓰면 안됨\n  const onSubmitForm = useCallback(() => {\n    console.log(email, password);\n    // 더미데이터\n    // setIsLoggedIn(true);\n    // dispatch(loginRequestAction({ email, password }))\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        email,\n        password\n      }\n    });\n  }, [email, password]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-email\",\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-email\",\n        value: email,\n        onChange: onChangeEmail,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-password\",\n        value: password,\n        type: \"password\",\n        onChange: onChangePassword,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: logInLoading,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n// validation\n// LoginForm.propTypes = {\n//     setIsLoggedIn:PropTypes.func.isRequired,\n// }","map":{"version":3,"names":["React","useCallback","useMemo","Form","Input","Button","Link","styled","useInput","useDispatch","useSelector","LOG_IN_REQUEST","loginRequestAction","jsxDEV","_jsxDEV","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","logInLoading","state","user","email","onChangeEmail","password","onChangePassword","onSubmitForm","console","log","type","data","onFinish","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","required","htmlType","loading","href"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/LoginForm.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport useInput from './hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOG_IN_REQUEST, loginRequestAction } from '../reducers/user';\r\n\r\n//css 적듯이 문법 적용 js처럼 적용하지 말고\r\nconst ButtonWrapper = styled.div`\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const LoginForm = () => {\r\n    const dispatch = useDispatch()\r\n    const { logInLoading } = useSelector((state) => state.user);\r\n    const [email, onChangeEmail] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    // const [password, setPassword] = useState('');\r\n\r\n    // component에 props로 들어가는 함수는 useCallback으로 무조건 최적화 해줘야함\r\n    // useMemo 는 특정 결과값을 재사용 할 때 사용하는 반면, useCallback 은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용\r\n    // useCallback은 함수를 캐싱, useMemo는 값을 캐싱\r\n    // useCallback은 캐싱이니깐 이전 컴포넌트랑 지금 컴포넌트와 동일하다고 함, 배열부분이 바뀌지 않는 이상\r\n    // 리렌더링하면 return부분 재렌더링되나, 바뀐부분(최적화되지 않는 부분)만 다시 그림\r\n    // virtual Dom에서 이전이랑 비교해서 달라진 부분만 알려줌 그래도 inline style 사용은 되도록 안하는 것이 좋음\r\n    \r\n    // const onChangePassword = useCallback((e) => {\r\n    //     setPassword(e.target.value);\r\n    // }, [])\r\n\r\n    // 유즈메모는 리렌더링되도 같은 값울 유지하므로 이렇게 적용할 수 있음\r\n    // const style = useMemo(() => ({ marginTop: 10}), []);\r\n\r\n    // antd는 이미 onFinish에서 e.preventDefault()가 적용되어 있어서 쓰면 안됨\r\n    const onSubmitForm = useCallback(() => {\r\n        console.log(email, password);\r\n        // 더미데이터\r\n        // setIsLoggedIn(true);\r\n        // dispatch(loginRequestAction({ email, password }))\r\n        dispatch({\r\n            type: LOG_IN_REQUEST,\r\n            data: { email, password },\r\n        });\r\n    }, [email, password]);\r\n\r\n  return (\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n        <div>\r\n            <label htmlFor='user-email'>이메일</label>\r\n            <br/>\r\n            <Input name=\"user-email\" value={email} onChange={onChangeEmail} required />\r\n        </div>\r\n        <div>\r\n        <label htmlFor='user-password'>비밀번호</label>\r\n            <br/>\r\n            <Input name=\"user-password\" value={password} type=\"password\" onChange={onChangePassword} required />\r\n        </div>\r\n        {/* style을 객체로 정의하면 객체는 무조건 새로 생성된걸로 인식하기때문에 이거때매 재렌더링됨 */}\r\n        <ButtonWrapper>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>로그인</Button>\r\n            <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n        </ButtonWrapper>\r\n    </FormWrapper>\r\n  )\r\n}\r\n\r\n// validation\r\n// LoginForm.propTypes = {\r\n//     setIsLoggedIn:PropTypes.func.isRequired,\r\n// }\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}