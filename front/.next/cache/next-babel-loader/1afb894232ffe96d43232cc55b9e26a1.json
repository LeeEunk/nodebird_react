{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _templateObject2,\n  _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-nodebird\\\\front\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from './hooks/useInput';\n\n//css 적듯이 문법 적용 js처럼 적용하지 말고\nvar ButtonWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-top: 10px;\\n\"])));\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    padding: 10px;\\n\"])));\n_c2 = FormWrapper;\nexport var LoginForm = function LoginForm(_ref) {\n  _s();\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 2),\n    id = _useInput2[0],\n    onChangeId = _useInput2[1];\n  var _useState = useState(''),\n    password = _useState[0],\n    setPassword = _useState[1];\n\n  // component에 props로 들어가는 함수는 useCallback으로 무조건 최적화 해줘야함\n  // useMemo 는 특정 결과값을 재사용 할 때 사용하는 반면, useCallback 은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용\n  // useCallback은 함수를 캐싱, useMemo는 값을 캐싱\n  // useCallback은 캐싱이니깐 이전 컴포넌트랑 지금 컴포넌트와 동일하다고 함, 배열부분이 바뀌지 않는 이상\n  // 리렌더링하면 return부분 재렌더링되나, 바뀐부분(최적화되지 않는 부분)만 다시 그림\n  // virtual Dom에서 이전이랑 비교해서 달라진 부분만 알려줌 그래도 inline style 사용은 되도록 안하는 것이 좋음\n  // const onChangeId = useCallback((e) => {\n  //     setId(e.target.value);\n  // }, [])\n\n  var onChangePassword = useCallback(function (e) {\n    setPassword(e.target.value);\n  }, []);\n\n  // 유즈메모는 리렌더링되도 같은 값울 유지하므로 이렇게 적용할 수 있음\n  var style = useMemo(function () {\n    return {\n      marginTop: 10\n    };\n  }, []);\n\n  // antd는 이미 onFinish에서 e.preventDefault()가 적용되어 있어서 쓰면 안됨\n  var onSubmitForm = useCallback(function () {\n    console.log(id, password);\n    // 더미데이터\n    setIsLoggedIn(true);\n  }, [id, password]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    type: \"password\",\n    onChange: onChangePassword,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), __jsx(ButtonWrapper, {\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 34\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\n// validation\n_s(LoginForm, \"fHsVT1kTGItb7D5UFnnx5/7/izQ=\", false, function () {\n  return [useInput];\n});\n_c3 = LoginForm;\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"names":["React","useCallback","useMemo","useState","Form","Input","Button","Link","styled","PropTypes","useInput","ButtonWrapper","div","_templateObject","_taggedTemplateLiteral","_c","FormWrapper","_templateObject2","_c2","LoginForm","_ref","_s","setIsLoggedIn","_useInput","_useInput2","_slicedToArray","id","onChangeId","_useState","password","setPassword","onChangePassword","e","target","value","style","marginTop","onSubmitForm","console","log","__jsx","onFinish","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","onChange","required","type","htmlType","loading","href","_c3","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/user/Downloads/react-nodebird/front/components/LoginForm.js"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport useInput from './hooks/useInput';\r\n\r\n//css 적듯이 문법 적용 js처럼 적용하지 말고\r\nconst ButtonWrapper = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n    padding: 10px;\r\n`;\r\n\r\nexport const LoginForm = ({ setIsLoggedIn }) => {\r\n    const [id, onChangeId] = useInput('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // component에 props로 들어가는 함수는 useCallback으로 무조건 최적화 해줘야함\r\n    // useMemo 는 특정 결과값을 재사용 할 때 사용하는 반면, useCallback 은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용\r\n    // useCallback은 함수를 캐싱, useMemo는 값을 캐싱\r\n    // useCallback은 캐싱이니깐 이전 컴포넌트랑 지금 컴포넌트와 동일하다고 함, 배열부분이 바뀌지 않는 이상\r\n    // 리렌더링하면 return부분 재렌더링되나, 바뀐부분(최적화되지 않는 부분)만 다시 그림\r\n    // virtual Dom에서 이전이랑 비교해서 달라진 부분만 알려줌 그래도 inline style 사용은 되도록 안하는 것이 좋음\r\n    // const onChangeId = useCallback((e) => {\r\n    //     setId(e.target.value);\r\n    // }, [])\r\n\r\n    const onChangePassword = useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    }, [])\r\n\r\n    // 유즈메모는 리렌더링되도 같은 값울 유지하므로 이렇게 적용할 수 있음\r\n    const style = useMemo(() => ({ marginTop: 10}), []);\r\n\r\n    // antd는 이미 onFinish에서 e.preventDefault()가 적용되어 있어서 쓰면 안됨\r\n    const onSubmitForm = useCallback(() => {\r\n        console.log(id, password);\r\n        // 더미데이터\r\n        setIsLoggedIn(true);\r\n    }, [id, password]);\r\n\r\n  return (\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n        <div>\r\n            <label htmlFor='user-id'>아이디</label>\r\n            <br/>\r\n            <Input name=\"user-id\" value={id} onChange={onChangeId} required />\r\n        </div>\r\n        <div>\r\n        <label htmlFor='user-password'>비밀번호</label>\r\n            <br/>\r\n            <Input name=\"user-password\" value={password} type=\"password\" onChange={onChangePassword} required />\r\n        </div>\r\n        {/* style을 객체로 정의하면 객체는 무조건 새로 생성된걸로 인식하기때문에 이거때매 재렌더링됨 */}\r\n        <ButtonWrapper style={style}>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\r\n            <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n        </ButtonWrapper>\r\n    </FormWrapper>\r\n  )\r\n}\r\n\r\n// validation\r\nLoginForm.propTypes = {\r\n    setIsLoggedIn:PropTypes.func.isRequired,\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}